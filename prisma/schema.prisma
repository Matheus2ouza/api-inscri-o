generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model localidades {
  id                 Int                      @id @default(autoincrement()) @map("id")
  nome               String                   @db.VarChar(100) @map("nome")
  saldo_devedor      Decimal?                 @default(0.00) @db.Decimal(10, 2) @map("saldo_devedor")
  status             Boolean?                 @default(false) @map("status")
  role               String?                  @default("user") @db.VarChar(50) @map("role")
  autenticacao       autenticacao_localidades? 
  comprovantes       comprovantes[]
  inscricao_avulsa   inscricao_avulsa[]

  @@map("localidades")
}

model autenticacao_localidades {
  localidade_id    Int         @id @map("localidade_id")
  senha_hash       String      @db.VarChar(512) @map("senha_hash")
  salt             String      @db.VarChar(32) @map("salt")
  algoritmo        String      @default("bcrypt") @db.VarChar(20) @map("algoritmo")
  data_atualizacao DateTime?   @default(now()) @db.Timestamp(6) @map("data_atualizacao")
  localidade       localidades @relation(fields: [localidade_id], references: [id], onDelete: Cascade)

  @@map("autenticacao_localidades")
}

model eventos {
  id                Int                 @id @default(autoincrement()) @map("id")
  descricao         String              @db.VarChar(200) @map("descricao")
  data_limite       DateTime            @db.Date @map("data_limite")
  inscricoesAvulsas inscricao_avulsa[]
  tiposInscricao    tipo_inscricao[]
  eventRules        event_rules[]
  vendasAlimentacao venda_alimentacao[]

  @@map("eventos")
}

model event_rules {
  id           Int      @id @default(autoincrement()) @map("id")
  evento_id    Int      @map("evento_id")
  min_age      Int?     @map("min_age")
  max_age      Int?     @map("max_age")
  allow_male   Boolean? @default(true) @map("allow_male")
  allow_female Boolean? @default(true) @map("allow_female")

  evento       eventos  @relation(fields: [evento_id], references: [id], onDelete: Cascade)

  @@map("event_rules")
}

model tipo_inscricao {
  id                    Int              @id @default(autoincrement()) @map("id")
  descricao             String           @db.VarChar(50) @map("descricao")
  valor                 Decimal?         @db.Decimal(10, 2) @map("valor")
  evento_id             Int?             @map("evento_id")
  eventos               eventos?         @relation(fields: [evento_id], references: [id], onDelete: NoAction)

  @@map("tipo_inscricao")
}

model caixa {
  id            Int      @id @default(autoincrement()) @map("id")
  descricao     String   @map("descricao")
  responsavel   String   @db.VarChar(255) @map("responsavel")
  valor         Decimal  @db.Decimal(10, 2) @map("valor")
  tipoMovimento String   @db.VarChar(50) @map("tipomovimento")
  data          DateTime @db.Date @map("data")

  @@map("caixa")
}

model comprovantes {
  id                Int          @id @default(autoincrement()) @map("id")
  localidade_id     Int          @map("localidade_id")
  comprovante_imagem Bytes        @map("comprovante_imagem")
  tipo_arquivo      String?      @db.VarChar(100) @map("tipo_arquivo")
  valor_pago        Decimal      @db.Decimal(10, 2) @map("valor_pago")
  localidade        localidades  @relation(fields: [localidade_id], references: [id], onDelete: Cascade)

  @@map("comprovantes")
}

model inscricao_avulsa {
  id               Int              @id @default(autoincrement()) @map("id")
  evento_id        Int              @map("evento_id")
  localidade_id    Int              @map("localidade_id")
  qtd_0_6          Int              @default(0) @map("qtd_0_6")
  qtd_7_10         Int              @default(0) @map("qtd_7_10")
  qtd_10_normal    Int              @default(0) @map("qtd_10_normal")
  qtd_visitante    Int              @default(0) @map("qtd_visitante")
  data             DateTime?        @db.Date @map("data")
  nome_responsavel String?          @db.VarChar(255) @map("nome_responsavel")
  evento           eventos          @relation(fields: [evento_id], references: [id], onDelete: Cascade)
  localidade       localidades      @relation(fields: [localidade_id], references: [id], onDelete: Cascade)
  pagamentosAvulsos pagamento_avulso[]

  @@map("inscricao_avulsa")
}

model movimentacao_financeira {
  id        Int       @id @default(autoincrement()) @map("id")
  tipo      String    @db.VarChar(20) @map("tipo")
  descricao String?   @db.VarChar(255) @map("descricao")
  valor     Decimal   @db.Decimal(10, 2) @map("valor")
  data      DateTime? @default(now()) @db.Timestamp(6) @map("data")

  @@map("movimentacao_financeira")
}

model pagamento_alimentacao {
  id                   Int               @id @default(autoincrement()) @map("id")
  venda_alimentacao_id Int               @map("venda_alimentacao_id")
  tipo_pagamento       String            @db.VarChar(100) @map("tipo_pagamento")
  valor                Decimal           @db.Decimal(10, 2) @map("valor")
  venda_alimentacao    venda_alimentacao @relation(fields: [venda_alimentacao_id], references: [id], onDelete: Cascade)

  @@map("pagamento_alimentacao")
}

model pagamento_avulso {
  id                   Int              @id @default(autoincrement()) @map("id")
  inscricao_avulsa_id  Int              @map("inscricao_avulsa2_id")
  tipo_pagamento       String           @db.VarChar(100) @map("tipo_pagamento")
  valor                Decimal          @db.Decimal(10, 2) @map("valor")
  inscricao_avulsa     inscricao_avulsa @relation(fields: [inscricao_avulsa_id], references: [id], onDelete: Cascade)

  @@map("pagamento_avulso")
}

model venda_alimentacao {
  id                    Int                     @id @default(autoincrement()) @map("id")
  evento_id             Int                     @map("evento_id")
  tipo_refeicao         String                  @db.VarChar(100) @map("tipo_refeicao")
  quantidade            Int                     @map("quantidade")
  valor_unitario        Decimal                 @db.Decimal(10, 2) @map("valor_unitario")
  valor_total           Decimal                 @db.Decimal(10, 2) @map("valor_total")
  pagamentos            pagamento_alimentacao[]
  evento                eventos                 @relation(fields: [evento_id], references: [id], onDelete: Cascade)

  @@map("venda_alimentacao")
}
