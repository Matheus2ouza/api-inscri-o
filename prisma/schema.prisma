generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model localidades {
  id                       Int                       @id @default(autoincrement())
  nome                     String                    @db.VarChar(100)
  saldo_devedor            Decimal?                  @default(0.00) @db.Decimal(10, 2)
  status                   Boolean?                  @default(false)
  role                     String?                   @default("user") @db.VarChar(50)
  autenticacao_localidades autenticacao_localidades?
  comprovantes             comprovantes[]
  inscricao_avulsa         inscricao_avulsa[]
  inscricao_geral          InscricaoGeral[]
}

model eventos {
  id                Int                 @id @default(autoincrement())
  descricao         String              @db.VarChar(200)
  data_limite       DateTime            @db.Date
  inscricao_avulsa  inscricao_avulsa[]
  inscricao_geral   InscricaoGeral[]
  tipo_inscricao    tipo_inscricao[]
  venda_alimentacao venda_alimentacao[]
}

model autenticacao_localidades {
  localidade_id    Int         @id(map: "autenticacao_pkey")
  senha_hash       String      @db.VarChar(512)
  salt             String      @db.VarChar(32)
  algoritmo        String      @default("bcrypt") @db.VarChar(20)
  data_atualizacao DateTime?   @default(now()) @db.Timestamp(6)
  localidades      localidades @relation(fields: [localidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_localidade")
}

model caixa {
  id            Int      @id @default(autoincrement())
  descricao     String
  responsavel   String   @db.VarChar(255)
  valor         Decimal  @db.Decimal(10, 2)
  tipomovimento String   @db.VarChar(50)
  data          DateTime @db.Date
}

model comprovantes {
  id                 Int         @id @default(autoincrement())
  localidade_id      Int
  comprovante_imagem Bytes
  tipo_arquivo       String?     @db.VarChar(100)
  valor_pago         Decimal     @db.Decimal(10, 2)
  localidades        localidades @relation(fields: [localidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inscricao_avulsa {
  id               Int                @id(map: "inscricao_avulsa2_pkey") @default(autoincrement())
  evento_id        Int
  localidade_id    Int
  qtd_0_6          Int                @default(0)
  qtd_7_10         Int                @default(0)
  qtd_10_normal    Int                @default(0)
  qtd_visitante    Int                @default(0)
  data             DateTime?          @db.Date
  nome_responsavel String?            @db.VarChar(255)
  eventos          eventos            @relation(fields: [evento_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inscricao_avulsa2_evento_id_fkey")
  localidades      localidades        @relation(fields: [localidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inscricao_avulsa2_localidade_id_fkey")
  pagamento_avulso pagamento_avulso[]
}

model movimentacao_financeira {
  id        Int       @id @default(autoincrement())
  tipo      String    @db.VarChar(20)
  descricao String?   @db.VarChar(255)
  valor     Decimal   @db.Decimal(10, 2)
  data      DateTime? @default(now()) @db.Timestamp(6)
}

model pagamento_alimentacao {
  id                   Int               @id @default(autoincrement())
  venda_alimentacao_id Int
  tipo_pagamento       String            @db.VarChar(100)
  valor                Decimal           @db.Decimal(10, 2)
  venda_alimentacao    venda_alimentacao @relation(fields: [venda_alimentacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model pagamento_avulso {
  id                   Int              @id @default(autoincrement())
  inscricao_avulsa2_id Int
  tipo_pagamento       String           @db.VarChar(100)
  valor                Int
  inscricao_avulsa2    inscricao_avulsa @relation(fields: [inscricao_avulsa2_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model tipo_inscricao {
  id                        Int                         @id @default(autoincrement())
  descricao                 String                      @db.VarChar(50)
  valor                     Decimal?                    @db.Decimal(10, 2)
  evento_id                 Int?
  inscricao_0_6             inscricao_0_6[]
  inscricao_10_acima        inscricao_10_acima[]
  inscricao_7_10            inscricao_7_10[]
  inscricao_servico         inscricao_servico[]
  inscricao_tx_participacao inscricao_tx_participacao[]
  eventos                   eventos?                    @relation(fields: [evento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_evento")
}

model venda_alimentacao {
  id                    Int                     @id @default(autoincrement())
  evento_id             Int
  tipo_refeicao         String                  @db.VarChar(100)
  quantidade            Int
  valor_unitario        Decimal                 @db.Decimal(10, 2)
  valor_total           Decimal                 @db.Decimal(10, 2)
  pagamento_alimentacao pagamento_alimentacao[]
  eventos               eventos                 @relation(fields: [evento_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model InscricaoGeral {
  id                        Int                         @id @default(autoincrement())
  localidade_id             Int?
  nome_responsavel          String                      @db.VarChar(100)
  qtd_geral                 Int?
  evento_id                 Int?
  status                    Boolean                     @default(true)
  inscricao_0_6             inscricao_0_6[]
  inscricao_10_acima        inscricao_10_acima[]
  inscricao_7_10            inscricao_7_10[]
  eventos                   eventos?                    @relation(fields: [evento_id], references: [id], onDelete: Cascade)
  localidades               localidades?                @relation(fields: [localidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inscricao_servico         inscricao_servico[]
  inscricao_tx_participacao inscricao_tx_participacao[]

  @@map("inscricao_geral")
}

model inscricao_0_6 {
  id                 Int             @id @default(autoincrement())
  inscricao_geral_id Int?
  tipo_inscricao_id  Int?
  qtd_masculino      Int?            @default(0)
  qtd_feminino       Int?            @default(0)
  inscricao_geral    InscricaoGeral? @relation(fields: [inscricao_geral_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tipo_inscricao     tipo_inscricao? @relation(fields: [tipo_inscricao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inscricao_10_acima {
  id                 Int             @id @default(autoincrement())
  inscricao_geral_id Int?
  tipo_inscricao_id  Int?
  qtd_masculino      Int?            @default(0)
  qtd_feminino       Int?            @default(0)
  inscricao_geral    InscricaoGeral? @relation(fields: [inscricao_geral_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tipo_inscricao     tipo_inscricao? @relation(fields: [tipo_inscricao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inscricao_7_10 {
  id                 Int             @id @default(autoincrement())
  inscricao_geral_id Int?
  tipo_inscricao_id  Int?
  qtd_masculino      Int?            @default(0)
  qtd_feminino       Int?            @default(0)
  inscricao_geral    InscricaoGeral? @relation(fields: [inscricao_geral_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tipo_inscricao     tipo_inscricao? @relation(fields: [tipo_inscricao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inscricao_servico {
  id                 Int             @id @default(autoincrement())
  inscricao_geral_id Int?
  tipo_inscricao_id  Int?
  qtd_masculino      Int?            @default(0)
  qtd_feminino       Int?            @default(0)
  inscricao_geral    InscricaoGeral? @relation(fields: [inscricao_geral_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tipo_inscricao     tipo_inscricao? @relation(fields: [tipo_inscricao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inscricao_tx_participacao {
  id                 Int             @id @default(autoincrement())
  inscricao_geral_id Int?
  tipo_inscricao_id  Int?
  qtd_masculino      Int?            @default(0)
  qtd_feminino       Int?            @default(0)
  inscricao_geral    InscricaoGeral? @relation(fields: [inscricao_geral_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tipo_inscricao     tipo_inscricao? @relation(fields: [tipo_inscricao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
